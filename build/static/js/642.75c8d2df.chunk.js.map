{"version":3,"file":"static/js/642.75c8d2df.chunk.js","mappings":"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","sources":["components/UserLists.tsx","components/QuestionCard.tsx","components/ResultCard.tsx","socket.js","views/FlashCard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n//   CardTitle,\r\n  ListGroup,\r\n//   CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst UserLists = ({ handleJoinGame, handleLeaveGame, UserData, joinedState }) => {\r\n  const renderJoinButton = () => {\r\n    if (joinedState) {\r\n      return (\r\n        <center>\r\n          <Button className=\"btn rounded-pill\" color=\"info\" size=\"lg\" onClick={handleLeaveGame}>\r\n              Leave Game\r\n          </Button>\r\n        </center>\r\n      );\r\n    } else {\r\n      return (\r\n        <center>\r\n          <Button className=\"btn rounded-pill\" color=\"info\" size=\"lg\" onClick={handleJoinGame}>\r\n              Join Game\r\n          </Button>\r\n        </center>\r\n      );\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {/* <CardTitle tag=\"h5\">User Lists</CardTitle>\r\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n          Here are joined users:\r\n        </CardSubtitle> */}\r\n        <ListGroup flush className=\"mt-4\">\r\n          {UserData && UserData.map((user, index) => (\r\n            <ListGroupItem\r\n              key={index}\r\n              action\r\n              tag=\"a\"\r\n              className=\"d-flex align-items-center p-3 border-0\"\r\n            >\r\n                <div className=\"d-flex align-items-center p-2\">\r\n                  <img\r\n                      src={user.avatar}\r\n                      className=\"rounded-circle\"\r\n                      alt=\"avatar\"\r\n                      width=\"45\"\r\n                      height=\"45\"\r\n                      />\r\n                  <div className=\"ms-3\">\r\n                      <h6 className=\"mb-0\">{user.name}</h6>\r\n                      <span className=\"text-muted\">{user.email}</span>\r\n                  </div>\r\n                </div>\r\n                <small className=\"ms-auto text-muted text-small\">\r\n                {user.point} points\r\n                </small>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n        {renderJoinButton()}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserLists.propTypes = {\r\n  handleJoinGame: PropTypes.func,\r\n  handleLeaveGame: PropTypes.func,\r\n  UserData: PropTypes.array,\r\n  joinedState: PropTypes.bool\r\n};\r\n\r\nexport default UserLists;\r\n","/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QuestionCard = ({ title, answers, handleMarkAnswer, joinedState }) => {\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <CardTitle tag=\"h4\" className=\"border-bottom p-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody>\r\n        <div className=\"button-group\">\r\n          {answers.map((answer, index) => (\r\n            <Button\r\n              key={index}\r\n              className=\"btn rounded-pill\"\r\n              color=\"info\"\r\n              size=\"lg\"\r\n              block\r\n              disabled={joinedState ? false : true}\r\n              onClick={() => handleMarkAnswer(answer)}\r\n            >\r\n              {answer.content}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nQuestionCard.propTypes = {\r\n  title: PropTypes.string,\r\n  answers: PropTypes.array,\r\n  handleMarkAnswer: PropTypes.func,\r\n  joinedState: PropTypes.bool,\r\n};\r\n\r\nexport default QuestionCard;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Card, CardBody, CardTitle, Badge } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ResultCard = ({ title, answer, winner }) => {\r\n  const renderWinner = () => {\r\n    if (winner) {\r\n      return (\r\n        <>\r\n          <h3 style={{ color: \"red\", fontWeight: \"bold\", marginRight: 20 }}>\r\n            Winner:{\" \"}\r\n          </h3>\r\n          <img\r\n            src={\"assets/images/users/\" + winner.name + \".png\"}\r\n            className=\"rounded-circle\"\r\n            alt=\"avatar\"\r\n            width=\"45\"\r\n            height=\"45\"\r\n          />\r\n          <h3 className=\"mb-0\" style={{ marginLeft: 20 }}>\r\n            {winner.name}\r\n          </h3>\r\n        </>\r\n      );\r\n    } else return null;\r\n  };\r\n\r\n  return (\r\n    <Card className=\"text-center\">\r\n      {/* <img \r\n                alt=\"Card image cap\" \r\n                srcSet=\"/static/media/bg3.5668e1f0dc365cf13f41.jpg\" \r\n                className=\"card-img\"\r\n                /> */}\r\n      <CardTitle tag=\"h4\" className=\"border-bottom p-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody>\r\n        <h3\r\n          color=\"primary rounded-pill\"\r\n          className=\"bg-primary rounded-pill\"\r\n          style={{ color: \"white\", padding: 5 }}\r\n        >\r\n          {answer.content + \"  \"}\r\n          <Badge\r\n            className=\"rounded-circle\"\r\n            color={answer.correct ? \"success\" : \"danger\"}\r\n          >\r\n            {answer.correct ? (\r\n              <i className=\"bi bi-check\"></i>\r\n            ) : (\r\n              <i className=\"bi bi-x-lg\"></i>\r\n            )}\r\n          </Badge>\r\n        </h3>\r\n        <CardTitle tag=\"h5\">\r\n          <div\r\n            className=\"d-flex text-center p-4\"\r\n            style={{ justifyContent: \"center\" }}\r\n          >\r\n            {renderWinner()}\r\n          </div>\r\n        </CardTitle>\r\n        <CardTitle tag=\"h4\" style={{ color: answer.correct ? \"red\" : \"blue\" }}>\r\n          {answer.correct ? \"+\" : \"-\"}5pts\r\n        </CardTitle>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResultCard.propTypes = {\r\n  title: PropTypes.string,\r\n  answers: PropTypes.object,\r\n  winner: PropTypes.object,\r\n};\r\n\r\nexport default ResultCard;\r\n","/* eslint-disable no-undef */\r\nimport { io } from \"socket.io-client\";\r\n\r\n// \"undefined\" means the URL will be computed from the `window.location` object\r\nconst URL =\r\n  process.env.NODE_ENV === \"production\" ? undefined : \"http://localhost:4000\";\r\n\r\nexport const socket = io(URL);\r\n","import { Col, Row } from \"reactstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport UserLists from \"../components/UserLists\";\r\nimport QuestionCard from \"../components/QuestionCard\";\r\nimport ResultCard from \"../components/ResultCard\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst QuestionData = require(\"../apis/questionQuery\");\r\n\r\nimport { socket } from \"../socket\";\r\n\r\nconst FlashCard = () => {\r\n  const [selectedCardIndex, setCardIndex] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [currentAnswer, setCurrentAnswer] = useState(null);\r\n  const [joinedState, setJoinedState] = useState(false);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [UserData, setUserData] = useState(null);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users_state_refreshed\", (users) => {\r\n      setUserData(users.filter((user) => user.joined));\r\n    });\r\n\r\n    socket.on(\"join_request_success\", (user) => {\r\n      setUserProfile(user);\r\n      setJoinedState(true);\r\n    });\r\n\r\n    socket.on(\"leave_request_success\", () => {\r\n      setJoinedState(false);\r\n    });\r\n\r\n    socket.on(\"receive_init_question_number\", (param) => {\r\n      setCardIndex(param);\r\n    });\r\n\r\n    socket.on(\"show_winner_and_next_question\", (param) => {\r\n      setCurrentAnswer(param.answer);\r\n      setWinner(param.winner);\r\n      setShowResult(true);\r\n      setTimeout(() => {\r\n        setShowResult(false);\r\n        socket.emit(\"change_user_point\", { plus: true });\r\n        setWinner(null);\r\n        setCardIndex(param.nextQuestionId);\r\n      }, 2000);\r\n    });\r\n  }, []);\r\n\r\n  const handleMarkAnswer = (param) => {\r\n    if (param.correct) {\r\n      socket.emit(\"show_winner_and_next_question\", {\r\n        answer: param,\r\n        nextQuestionId: handleGetNextQuestionId(),\r\n      });\r\n    } else {\r\n      setCurrentAnswer(param);\r\n      setShowResult(true);\r\n      setTimeout(() => {\r\n        setShowResult(false);\r\n        socket.emit(\"change_user_point\", { plues: false });\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleJoinGame = () => {\r\n    socket.emit(\"user_join_request\");\r\n  };\r\n\r\n  const handleLeaveGame = () => {\r\n    socket.emit(\"user_leave_request\", userProfile);\r\n  };\r\n\r\n  const handleGetNextQuestionId = () => {\r\n    const tempIndex: number = Math.floor(Math.random() * QuestionData.length);\r\n    if (tempIndex === selectedCardIndex) {\r\n      return handleGetNextQuestionId();\r\n    } else {\r\n      return tempIndex;\r\n    }\r\n  };\r\n\r\n  const handleShowCard = () => {\r\n    const selCardData = QuestionData[selectedCardIndex];\r\n    return (\r\n      <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n        <QuestionCard\r\n          title={selCardData.question}\r\n          answers={selCardData.answers}\r\n          handleMarkAnswer={handleMarkAnswer}\r\n          joinedState={joinedState}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  const handleShowResult = () => {\r\n    const selCardData = QuestionData[selectedCardIndex];\r\n    return (\r\n      <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n        <ResultCard\r\n          title={selCardData.question}\r\n          answer={currentAnswer}\r\n          winner={winner}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"10%\" }}>\r\n      <Row>\r\n        <Col sm=\"6\" md=\"6\" lg=\"4\" xl=\"4\" xxl=\"4\">\r\n          <UserLists\r\n            handleJoinGame={handleJoinGame}\r\n            handleLeaveGame={handleLeaveGame}\r\n            UserData={UserData}\r\n            joinedState={joinedState}\r\n          />\r\n        </Col>\r\n        {showResult && joinedState ? handleShowResult() : handleShowCard()}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashCard;\r\n"],"names":["_ref","handleJoinGame","handleLeaveGame","UserData","joinedState","_jsx","Card","children","_jsxs","CardBody","ListGroup","flush","className","map","user","index","ListGroupItem","action","tag","src","avatar","alt","width","height","name","email","point","Button","color","size","onClick","title","answers","handleMarkAnswer","CardTitle","answer","block","disabled","content","winner","style","padding","Badge","correct","justifyContent","_Fragment","fontWeight","marginRight","marginLeft","socket","io","undefined","QuestionData","require","FlashCard","selectedCardIndex","setCardIndex","useState","showResult","setShowResult","currentAnswer","setCurrentAnswer","setJoinedState","userProfile","setUserProfile","setUserData","setWinner","useEffect","on","users","filter","joined","param","setTimeout","emit","plus","nextQuestionId","handleGetNextQuestionId","plues","tempIndex","Math","floor","random","length","paddingTop","Row","Col","sm","md","lg","xl","xxl","UserLists","handleShowResult","selCardData","ResultCard","question","handleShowCard","QuestionCard"],"sourceRoot":""}