{"version":3,"file":"static/js/642.5add2aa0.chunk.js","mappings":"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","sources":["components/UserLists.tsx","components/QuestionCard.tsx","components/ResultCard.tsx","socket.js","views/FlashCard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  //   CardTitle,\r\n  ListGroup,\r\n  //   CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UserLists = ({\r\n  handleJoinGame,\r\n  handleLeaveGame,\r\n  joinedUsers,\r\n  joinedState,\r\n}) => {\r\n  const renderJoinButton = () => {\r\n    if (joinedState) {\r\n      return (\r\n        <center>\r\n          <Button\r\n            className=\"btn rounded-pill\"\r\n            color=\"info\"\r\n            size=\"lg\"\r\n            onClick={handleLeaveGame}\r\n          >\r\n            Leave Game\r\n          </Button>\r\n        </center>\r\n      );\r\n    } else {\r\n      return (\r\n        <center>\r\n          <Button\r\n            className=\"btn rounded-pill\"\r\n            color=\"info\"\r\n            size=\"lg\"\r\n            onClick={handleJoinGame}\r\n          >\r\n            Join Game\r\n          </Button>\r\n        </center>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card style={styles.cardStyle}>\r\n      <CardBody>\r\n        {/* <CardTitle tag=\"h5\">User Lists</CardTitle>\r\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n          Here are joined users:\r\n        </CardSubtitle> */}\r\n        <ListGroup flush className=\"mt-4\">\r\n          {joinedUsers &&\r\n            joinedUsers.map((user, index) => (\r\n              <ListGroupItem\r\n                key={index}\r\n                action\r\n                tag=\"a\"\r\n                style={styles.userItemStyle}\r\n                className=\"d-flex align-items-center p-3 border-0\"\r\n              >\r\n                <div className=\"d-flex align-items-center p-2\">\r\n                  <img\r\n                    src={user.avatar}\r\n                    className=\"rounded-circle\"\r\n                    alt=\"avatar\"\r\n                    width=\"45\"\r\n                    height=\"45\"\r\n                  />\r\n                  <div className=\"ms-3\">\r\n                    <h4 className=\"mb-0\">{user.name}</h4>\r\n                    {/* <span>{user.email}</span> */}\r\n                  </div>\r\n                </div>\r\n                <h5 className=\"ms-auto\">{user.point} points</h5>\r\n              </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n        {renderJoinButton()}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  cardStyle: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"white\",\r\n    padding: \"5%\",\r\n  },\r\n  userItemStyle: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"white\",\r\n    borderRadius: 5,\r\n    marginTop: 2,\r\n    marginBottom: 2,\r\n  },\r\n};\r\n\r\nUserLists.propTypes = {\r\n  handleJoinGame: PropTypes.func,\r\n  handleLeaveGame: PropTypes.func,\r\n  joinedUsers: PropTypes.array,\r\n  joinedState: PropTypes.bool,\r\n};\r\n\r\nexport default UserLists;\r\n","/* eslint-disable react/react-in-jsx-scope */\r\nimport { Button, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QuestionCard = ({ content, options, handleMarkOption, joinedState }) => {\r\n  return (\r\n    <Card className=\"text-center\" style={styles.cardStyle}>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom p-3 mb-0\">\r\n        <h5>14 / 15</h5>\r\n        {content}\r\n      </CardTitle>\r\n      <CardBody>\r\n        <div className=\"button-group\">\r\n          {options.map((option: string, index: number) => (\r\n            <Button\r\n              key={index}\r\n              className=\"btn rounded-pill\"\r\n              color=\"info\"\r\n              size=\"lg\"\r\n              block\r\n              disabled={joinedState ? false : true}\r\n              style={styles.optionButtonStyle}\r\n              onClick={() => handleMarkOption(option, index)}\r\n            >\r\n              {option}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  cardStyle: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"white\",\r\n  },\r\n  optionButtonStyle: { marginTop: 5 },\r\n};\r\n\r\nQuestionCard.propTypes = {\r\n  content: PropTypes.string,\r\n  options: PropTypes.array,\r\n  handleMarkOption: PropTypes.func,\r\n  joinedState: PropTypes.bool,\r\n};\r\n\r\nexport default QuestionCard;\r\n","import { Card, CardBody, CardTitle, Badge } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ResultCard = ({ content, answer, winner }) => {\r\n  const renderWinner = () => {\r\n    if (winner) {\r\n      return (\r\n        <>\r\n          <h3 style={{ color: \"red\", fontWeight: \"bold\", marginRight: 20 }}>\r\n            Winner:{\" \"}\r\n          </h3>\r\n          <img\r\n            src={\"assets/images/users/\" + winner.name + \".png\"}\r\n            className=\"rounded-circle\"\r\n            alt=\"avatar\"\r\n            width=\"45\"\r\n            height=\"45\"\r\n          />\r\n          <h3 className=\"mb-0\" style={{ marginLeft: 20 }}>\r\n            {winner.name}\r\n          </h3>\r\n        </>\r\n      );\r\n    } else return null;\r\n  };\r\n\r\n  return (\r\n    <Card className=\"text-center\" style={styles.cardStyle}>\r\n      {/* <img \r\n                alt=\"Card image cap\" \r\n                srcSet=\"/static/media/bg3.5668e1f0dc365cf13f41.jpg\" \r\n                className=\"card-img\"\r\n                /> */}\r\n      <CardTitle tag=\"h4\" className=\"border-bottom p-3 mb-0\">\r\n        {content}\r\n      </CardTitle>\r\n      <CardBody>\r\n        <h3\r\n          color=\"primary rounded-pill\"\r\n          className=\"bg-primary rounded-pill\"\r\n          style={{ color: \"white\", padding: 5 }}\r\n        >\r\n          {answer.content + \"  \"}\r\n          <Badge\r\n            className=\"rounded-circle\"\r\n            color={answer.correct ? \"success\" : \"danger\"}\r\n          >\r\n            {answer.correct ? (\r\n              <i className=\"bi bi-check\"></i>\r\n            ) : (\r\n              <i className=\"bi bi-x-lg\"></i>\r\n            )}\r\n          </Badge>\r\n        </h3>\r\n        <CardTitle tag=\"h5\">\r\n          <div\r\n            className=\"d-flex text-center p-4\"\r\n            style={{ justifyContent: \"center\" }}\r\n          >\r\n            {renderWinner()}\r\n          </div>\r\n        </CardTitle>\r\n        <CardTitle tag=\"h4\" style={{ color: answer.correct ? \"red\" : \"white\" }}>\r\n          {answer.correct ? \"+\" : \"-\"}5pts\r\n        </CardTitle>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  cardStyle: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nResultCard.propTypes = {\r\n  content: PropTypes.string,\r\n  answer: PropTypes.object,\r\n  winner: PropTypes.object,\r\n};\r\n\r\nexport default ResultCard;\r\n","/* eslint-disable no-undef */\r\nimport { io } from \"socket.io-client\";\r\n\r\n// \"undefined\" means the URL will be computed from the `window.location` object\r\nconst URL =\r\n  process.env.NODE_ENV === \"production\" ? undefined : \"http://localhost:4000\";\r\n\r\nexport const socket = io(URL);\r\n","import { Col, Row } from \"reactstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport UserLists from \"../components/UserLists\";\r\nimport QuestionCard from \"../components/QuestionCard\";\r\nimport ResultCard from \"../components/ResultCard\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst questions = require(\"../apis/questionQuery\").questions;\r\n\r\nimport { socket } from \"../socket\";\r\n\r\nconst FlashCard = () => {\r\n  const [questionIndex, selectQuestion] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [selectedOption, selectOption] = useState({\r\n    content: \"\",\r\n    correct: false,\r\n  });\r\n  const [joinedState, setJoinedState] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [joinedUsers, setJoinedUsers] = useState(null);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users_state_refreshed\", (users) => {\r\n      setJoinedUsers(users.filter((user) => user.joined));\r\n    });\r\n\r\n    socket.on(\"join_request_success\", (user) => {\r\n      setUser(user);\r\n      setJoinedState(true);\r\n    });\r\n\r\n    socket.on(\"leave_request_success\", () => {\r\n      setJoinedState(false);\r\n    });\r\n\r\n    socket.on(\"receive_init_question_number\", (param) => {\r\n      selectQuestion(param);\r\n    });\r\n\r\n    socket.on(\"show_winner_and_next_question\", (param) => {\r\n      selectOption({ content: param.option, correct: true });\r\n      setWinner(param.winner);\r\n      setShowResult(true);\r\n      setTimeout(() => {\r\n        setShowResult(false);\r\n        socket.emit(\"change_user_point\", { plus: true });\r\n        setWinner(null);\r\n        selectQuestion(param.nextQuestionId);\r\n      }, 2000);\r\n    });\r\n  }, []);\r\n\r\n  const handleMarkOption = (option: string, index: number) => {\r\n    if (index === questions[questionIndex].answer) {\r\n      socket.emit(\"show_winner_and_next_question\", {\r\n        answer: option,\r\n        nextQuestionId: handleGetNextQuestionId(),\r\n      });\r\n    } else {\r\n      selectOption({ content: option, correct: false });\r\n      setShowResult(true);\r\n      setTimeout(() => {\r\n        setShowResult(false);\r\n        socket.emit(\"change_user_point\", { plus: false });\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleJoinGame = () => {\r\n    socket.emit(\"user_join_request\");\r\n  };\r\n\r\n  const handleLeaveGame = () => {\r\n    socket.emit(\"user_leave_request\", user);\r\n  };\r\n\r\n  const handleGetNextQuestionId = () => {\r\n    const tempIndex: number = Math.floor(Math.random() * questions.length);\r\n\r\n    if (tempIndex === questionIndex) {\r\n      return handleGetNextQuestionId();\r\n    } else {\r\n      return tempIndex;\r\n    }\r\n  };\r\n\r\n  const handleShowCard = () => {\r\n    const question = questions[questionIndex];\r\n\r\n    return (\r\n      <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n        <QuestionCard\r\n          content={question.content}\r\n          options={question.options}\r\n          handleMarkOption={handleMarkOption}\r\n          joinedState={joinedState}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  const handleShowResult = () => {\r\n    const question = questions[questionIndex];\r\n\r\n    return (\r\n      <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n        <ResultCard\r\n          content={question.content}\r\n          answer={selectedOption}\r\n          winner={winner}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"10%\" }}>\r\n      <Row>\r\n        <Col sm=\"6\" md=\"6\" lg=\"6\" xl=\"6\" xxl=\"6\">\r\n          <UserLists\r\n            handleJoinGame={handleJoinGame}\r\n            handleLeaveGame={handleLeaveGame}\r\n            joinedUsers={joinedUsers}\r\n            joinedState={joinedState}\r\n          />\r\n        </Col>\r\n        {showResult && joinedState ? handleShowResult() : handleShowCard()}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashCard;\r\n"],"names":["styles","cardStyle","backgroundColor","color","padding","userItemStyle","borderRadius","marginTop","marginBottom","_ref","handleJoinGame","handleLeaveGame","joinedUsers","joinedState","_jsx","Card","style","children","_jsxs","CardBody","ListGroup","flush","className","map","user","index","ListGroupItem","action","tag","src","avatar","alt","width","height","name","point","Button","size","onClick","optionButtonStyle","content","options","handleMarkOption","CardTitle","option","block","disabled","answer","winner","Badge","correct","justifyContent","_Fragment","fontWeight","marginRight","marginLeft","socket","io","undefined","questions","require","FlashCard","questionIndex","selectQuestion","useState","showResult","setShowResult","selectedOption","selectOption","setJoinedState","setUser","setJoinedUsers","setWinner","useEffect","on","users","filter","joined","param","setTimeout","emit","plus","nextQuestionId","handleGetNextQuestionId","tempIndex","Math","floor","random","length","paddingTop","Row","Col","sm","md","lg","xl","xxl","UserLists","handleShowResult","question","ResultCard","handleShowCard","QuestionCard"],"sourceRoot":""}